{"ast":null,"code":"import _objectSpread from\"/workspace/hoangta/translation-backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/workspace/hoangta/translation-backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/workspace/hoangta/translation-backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{TRANSLATION,CHANGE_SOURCE,CHANGE_SOURCE_TEXT,CHANGE_TARGET_TEXT,CHANGE_TARGET,DETECTLANG,DETECTLANG_FAIL,DETECTLANG_SUCCESS,SWAP_TRANSLATE,TRANSLATION_FAIL,TRANSLATION_SUCCESS,CHANGE_DETECT_LANG,DISABLEINPUT,RESET}from'../constant/translateTypes';import*as axiosHelper from'../../helpers/axiosHelper';import{debounce}from'lodash';var STATUS={TRANSLATING:'translating',TRANSLATED:'translated',CANCELLED:'cancelled',DETECTING:'detecting'};/**\n * @description Reset cả input text và output text\n */export var reset=function reset(){return{type:RESET};};/**\n * @description Fix cứng input text được nhập vào\n */export var changeSourceText=function changeSourceText(data){return{type:CHANGE_SOURCE_TEXT,payload:{data:data}};};/**\n * @description Fix cứng outputText text được nhập vào\n */export var changeTargetText=function changeTargetText(data){return{type:CHANGE_TARGET_TEXT,payload:{data:data}};};/**\n * @description Chỉnh loại ngôn ngữ đầu vào\n */export var changeSource=function changeSource(data){return{type:CHANGE_SOURCE,payload:{data:data}};};/**\n * @description Thay đổi ngôn ngữ phát hiện\n */export var changeDetectLang=function changeDetectLang(data){return{type:CHANGE_DETECT_LANG,payload:{data:data}};};/**\n * @description Chỉnh loại ngôn ngữ đầu ra\n */export var changeTarget=function changeTarget(data){return{type:CHANGE_TARGET,payload:{data:data}};};/**\n * @description Hoán đổi loại ngôn ngữ ở ra và vào\n */export var swapTranslate=function swapTranslate(dataSource,dataTarget){return{type:SWAP_TRANSLATE,payload:{dataSource:dataSource,dataTarget:dataTarget}};};/**\n * @description Chặn người dùng nhập text vào input\n */export function disableInput(){return{type:DISABLEINPUT};}/**\n * @description Có 2 TH để dùng\n * 1. khi người dùng đang nhập text\n * 2. Khi đang lấy kết quả từ BE (Hiện tại trường này \n * được thay bằng hàm disableInput)\n */export function translationLoading(){return{type:TRANSLATION};}/**\n * @description Thành công và trả về kết quả dịch\n */export function translationSuccess(data){return{type:TRANSLATION_SUCCESS,payload:{targetText:data.target_text}};}/**\n * @description Thành công và trả về err\n */export function translationFailed(err){return{type:TRANSLATION_FAIL,payload:{err:err}};}export function detectLangLoading(){return{type:DETECTLANG};}/**\n * @description Thành công và trả về kết quả dịch\n */export function detectLangSuccess(data){return{type:DETECTLANG_SUCCESS,payload:{targetText:data.target_text,detectLang:data.source_lang}};}/**\n * @description Thành công và trả về err\n */export function detectLangFailed(err,detectLang){return{type:DETECTLANG_FAIL,payload:{detectLang:detectLang,err:err}};}/**\n * @description Do BE bắt fai kiểm tra status \n * nên sẽ gọi lại API khi nào status được dịch.\n * Đặt thời gian mỗi lần gọi lại API \n * ! => tránh việc gọi liên tục và ko cần thiết\n */var recursiveCheckStatus=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(translationHistoryId,taskId,time){var getTranslationHistoryResult;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axiosHelper.getTranslateHistoryGetSingle({translationHistoryId:translationHistoryId,taskId:taskId});case 2:getTranslationHistoryResult=_context2.sent;if(!(getTranslationHistoryResult.data.status===STATUS.TRANSLATING)){_context2.next=7;break;}return _context2.abrupt(\"return\",new Promise(function(resolve,reject){setTimeout(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _getTranslationHistoryResult;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return recursiveCheckStatus(translationHistoryId,taskId,time);case 3:_getTranslationHistoryResult=_context.sent;resolve(_getTranslationHistoryResult);_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);reject(_context.t0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);})),1000);}));case 7:return _context2.abrupt(\"return\",getTranslationHistoryResult);case 8:case\"end\":return _context2.stop();}}},_callee2);}));return function recursiveCheckStatus(_x,_x2,_x3){return _ref.apply(this,arguments);};}();/**\n * @description Do BE bắt fai kiểm tra status \n * nên sẽ gọi lại API khi nào status được dịch.\n * Đặt thời gian mỗi lần gọi lại API \n * ! => tránh việc gọi liên tục và ko cần thiết\n */var recursiveDetectionCheckStatus=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(translationHistoryId,taskId,time){var getDetectionHistoryResult;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return axiosHelper.getDetectionHistoryGetSingle({translationHistoryId:translationHistoryId,taskId:taskId});case 2:getDetectionHistoryResult=_context4.sent;if(!(getDetectionHistoryResult.data.status===STATUS.DETECTING)){_context4.next=7;break;}return _context4.abrupt(\"return\",new Promise(function(resolve,reject){setTimeout(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var _getDetectionHistoryResult;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return recursiveDetectionCheckStatus(translationHistoryId,taskId,time);case 3:_getDetectionHistoryResult=_context3.sent;resolve(_getDetectionHistoryResult);_context3.next=10;break;case 7:_context3.prev=7;_context3.t0=_context3[\"catch\"](0);reject(_context3.t0);case 10:case\"end\":return _context3.stop();}}},_callee3,null,[[0,7]]);})),1000);}));case 7:return _context4.abrupt(\"return\",getDetectionHistoryResult);case 8:case\"end\":return _context4.stop();}}},_callee4);}));return function recursiveDetectionCheckStatus(_x4,_x5,_x6){return _ref3.apply(this,arguments);};}();/**\n * @description Nhập từ input => đợi 1 khoảng thời gian đẻ nhận text\n * ! Tránh việc gọi API ko cần thiêt và liên tục\n */var debouncedTranslate=debounce(/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(body,dispatch){var time,postTranslationResult,getTranslationHistoryResult,getTranslationResult;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;time=1;_context5.next=4;return axiosHelper.postTranslate(body);case 4:postTranslationResult=_context5.sent;_context5.next=7;return recursiveCheckStatus(postTranslationResult.data.translationHitoryId,postTranslationResult.data.taskId,time);case 7:getTranslationHistoryResult=_context5.sent;if(!(getTranslationHistoryResult.message==='Time Out')){_context5.next=12;break;}dispatch(translationFailed(getTranslationHistoryResult.message));_context5.next=16;break;case 12:_context5.next=14;return axiosHelper.getTranslateResult(getTranslationHistoryResult.data.resultUrl);case 14:getTranslationResult=_context5.sent;if(getTranslationResult.status==='closed'){dispatch(translationFailed(getTranslationHistoryResult.message));}else{dispatch(translationSuccess(getTranslationResult));}case 16:_context5.next=21;break;case 18:_context5.prev=18;_context5.t0=_context5[\"catch\"](0);dispatch(translationFailed(_context5.t0));case 21:case\"end\":return _context5.stop();}}},_callee5,null,[[0,18]]);}));return function(_x7,_x8){return _ref5.apply(this,arguments);};}(),0);/**\n * @description Thunk function cho việc dịch từ và lấy kết quả\n */ // { \"sourceText\": \"string\", \"sourceLang\": \"zh\", \"targetLang\": \"zh\"\nexport var translationAsync=function translationAsync(body){return function(dispatch){if(body.sourceText.trim()!==''){dispatch(translationLoading());debouncedTranslate(body,dispatch);}};};/**\n * @description Nhập từ input => đợi 1 khoảng thời gian đẻ nhận text\n * ! Tránh việc gọi API ko cần thiêt và liên tục\n */var debouncedTranslateAndDetect=debounce(/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(body,dispatch){var time,getDetectLangInstant,getSourceLang,getDetectResult,postTranslationResult,getTranslationHistoryResult,getTranslationResult;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.prev=0;time=1;// Phát hiện ngôn ngữ\n_context6.next=4;return axiosHelper.detectLangInstant({sourceText:body.sourceText});case 4:getDetectLangInstant=_context6.sent;_context6.next=7;return recursiveDetectionCheckStatus(getDetectLangInstant.data.translationHitoryId,getDetectLangInstant.data.taskId,time);case 7:getSourceLang=_context6.sent;if(!(getSourceLang.message==='Time Out')){_context6.next=12;break;}dispatch(detectLangFailed(getSourceLang.message,'unknown'));_context6.next=33;break;case 12:_context6.next=14;return axiosHelper.getTranslateResult(getSourceLang.data.resultUrl);case 14:getDetectResult=_context6.sent;if(!(getDetectResult.status==='closed')){_context6.next=19;break;}dispatch(detectLangFailed(getDetectResult.message,getDetectResult.source_lang));_context6.next=33;break;case 19:_context6.next=21;return axiosHelper.postTranslate(_objectSpread(_objectSpread({},body),{},{sourceLang:getDetectResult.source_lang}));case 21:postTranslationResult=_context6.sent;_context6.next=24;return recursiveCheckStatus(postTranslationResult.data.translationHitoryId,postTranslationResult.data.taskId,time);case 24:getTranslationHistoryResult=_context6.sent;if(!(getTranslationHistoryResult.message==='Time Out')){_context6.next=29;break;}dispatch(detectLangFailed(getTranslationHistoryResult.message,'unknown'));_context6.next=33;break;case 29:_context6.next=31;return axiosHelper.getTranslateResult(getTranslationHistoryResult.data.resultUrl);case 31:getTranslationResult=_context6.sent;if(getTranslationResult.status==='closed'){dispatch(detectLangFailed(getTranslationResult.message,getTranslationResult.source_lang));}else{dispatch(detectLangSuccess(getTranslationResult));}case 33:_context6.next=38;break;case 35:_context6.prev=35;_context6.t0=_context6[\"catch\"](0);dispatch(detectLangFailed(_context6.t0,'unknown'));case 38:case\"end\":return _context6.stop();}}},_callee6,null,[[0,35]]);}));return function(_x9,_x10){return _ref6.apply(this,arguments);};}(),0);/**\n * @description Thunk function cho việc dịch từ và lấy kết quả\n */ // { \"sourceText\": \"string\", \"sourceLang\": null, \"targetLang\": \"zh\"\nexport var translationAndDetectAsync=function translationAndDetectAsync(body){return function(dispatch){if(body.sourceText.trim()!==''){dispatch(detectLangLoading());debouncedTranslateAndDetect(body,dispatch);}};};export var makeTranslation=function makeTranslation(translationResult,translationData){var dataTo=translationResult;var direction=translationData.direction;var dataFrom=translationData.data;return{type:TRANSLATION,payload:{fromText:dataFrom,toText:dataTo,direction:direction}};};export var makeTranslationAsync=function makeTranslationAsync(translationData){return/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch){var translationResult;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.prev=0;_context7.next=3;return axiosHelper.createTranslation(translationData);case 3:translationResult=_context7.sent;dispatch(makeTranslation(translationResult.data.data,translationData));_context7.next=10;break;case 7:_context7.prev=7;_context7.t0=_context7[\"catch\"](0);console.warn(_context7.t0);case 10:case\"end\":return _context7.stop();}}},_callee7,null,[[0,7]]);}));return function(_x11){return _ref7.apply(this,arguments);};}();};","map":{"version":3,"sources":["/workspace/hoangta/translation-backend/frontend/src/redux/actions/translateAction.js"],"names":["TRANSLATION","CHANGE_SOURCE","CHANGE_SOURCE_TEXT","CHANGE_TARGET_TEXT","CHANGE_TARGET","DETECTLANG","DETECTLANG_FAIL","DETECTLANG_SUCCESS","SWAP_TRANSLATE","TRANSLATION_FAIL","TRANSLATION_SUCCESS","CHANGE_DETECT_LANG","DISABLEINPUT","RESET","axiosHelper","debounce","STATUS","TRANSLATING","TRANSLATED","CANCELLED","DETECTING","reset","type","changeSourceText","data","payload","changeTargetText","changeSource","changeDetectLang","changeTarget","swapTranslate","dataSource","dataTarget","disableInput","translationLoading","translationSuccess","targetText","target_text","translationFailed","err","detectLangLoading","detectLangSuccess","detectLang","source_lang","detectLangFailed","recursiveCheckStatus","translationHistoryId","taskId","time","getTranslateHistoryGetSingle","getTranslationHistoryResult","status","Promise","resolve","reject","setTimeout","recursiveDetectionCheckStatus","getDetectionHistoryGetSingle","getDetectionHistoryResult","debouncedTranslate","body","dispatch","postTranslate","postTranslationResult","translationHitoryId","message","getTranslateResult","resultUrl","getTranslationResult","translationAsync","sourceText","trim","debouncedTranslateAndDetect","detectLangInstant","getDetectLangInstant","getSourceLang","getDetectResult","sourceLang","translationAndDetectAsync","makeTranslation","translationResult","translationData","dataTo","direction","dataFrom","fromText","toText","makeTranslationAsync","createTranslation","console","warn"],"mappings":"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","sourcesContent":["import { \n\tTRANSLATION, \n\tCHANGE_SOURCE, \n\tCHANGE_SOURCE_TEXT,\n\tCHANGE_TARGET_TEXT,\n\tCHANGE_TARGET, \n\tDETECTLANG,\n\tDETECTLANG_FAIL,\n\tDETECTLANG_SUCCESS,\n\tSWAP_TRANSLATE,\n\tTRANSLATION_FAIL,\n\tTRANSLATION_SUCCESS,\n\tCHANGE_DETECT_LANG,\n\tDISABLEINPUT,\n\tRESET,\n} from '../constant/translateTypes';\nimport * as axiosHelper from '../../helpers/axiosHelper';\nimport { debounce } from 'lodash';\n\nconst STATUS = {\n\tTRANSLATING: 'translating',\n\tTRANSLATED: 'translated',\n\tCANCELLED: 'cancelled',\n\tDETECTING: 'detecting'\n};\n\n/**\n * @description Reset cả input text và output text\n */\nexport const reset = () => {\n\treturn {\n\t\ttype: RESET,\n\t};\n};\n\n/**\n * @description Fix cứng input text được nhập vào\n */\nexport const changeSourceText = (data) => {\n\treturn {\n\t\ttype: CHANGE_SOURCE_TEXT,\n\t\tpayload: {\n\t\t\tdata\n\t\t}\n\t};\n};\n\n\n/**\n * @description Fix cứng outputText text được nhập vào\n */\nexport const changeTargetText = (data) => {\n\treturn {\n\t\ttype: CHANGE_TARGET_TEXT,\n\t\tpayload: {\n\t\t\tdata\n\t\t}\n\t};\n};\n\n/**\n * @description Chỉnh loại ngôn ngữ đầu vào\n */\nexport const changeSource = (data) => {\n\treturn {\n\t\ttype: CHANGE_SOURCE,\n\t\tpayload: {\n\t\t\tdata\n\t\t}\n\t};\n};\n\n/**\n * @description Thay đổi ngôn ngữ phát hiện\n */\nexport const changeDetectLang = (data) => {\n\treturn {\n\t\ttype: CHANGE_DETECT_LANG,\n\t\tpayload: {\n\t\t\tdata\n\t\t}\n\t};\n};\n\n/**\n * @description Chỉnh loại ngôn ngữ đầu ra\n */\nexport const changeTarget = (data) => {\n\treturn {\n\t\ttype: CHANGE_TARGET,\n\t\tpayload: {\n\t\t\tdata\n\t\t}\n\t};\n};\n\n/**\n * @description Hoán đổi loại ngôn ngữ ở ra và vào\n */\nexport const swapTranslate = (dataSource, dataTarget) => {\n\treturn {\n\t\ttype: SWAP_TRANSLATE,\n\t\tpayload: {\n\t\t\tdataSource,\n\t\t\tdataTarget,\n\t\t}\n\t};\n};\n\n/**\n * @description Chặn người dùng nhập text vào input\n */\nexport function disableInput() {\n\treturn {\n\t  type: DISABLEINPUT,\n\t};\n}\n\n/**\n * @description Có 2 TH để dùng\n * 1. khi người dùng đang nhập text\n * 2. Khi đang lấy kết quả từ BE (Hiện tại trường này \n * được thay bằng hàm disableInput)\n */\nexport function translationLoading() {\n\treturn {\n\t  type: TRANSLATION,\n\t};\n}\n\n/**\n * @description Thành công và trả về kết quả dịch\n */\nexport function translationSuccess(data) {\n\treturn {\n\t  type: TRANSLATION_SUCCESS,\n\t  payload: {\n\t\t\ttargetText: data.target_text,\n\t\t}\n\t};\n}\n\n/**\n * @description Thành công và trả về err\n */\nexport function translationFailed(err) {\n\treturn {\n\t  type: TRANSLATION_FAIL,\n\t  payload: {\n\t\t\terr,\n\t\t}\n\t};\n}\n\nexport function detectLangLoading() {\n\treturn {\n\t  type: DETECTLANG,\n\t};\n}\n\n/**\n * @description Thành công và trả về kết quả dịch\n */\nexport function detectLangSuccess(data) {\n\treturn {\n\t  type: DETECTLANG_SUCCESS,\n\t  payload: {\n\t\t\ttargetText: data.target_text,\n\t\t\tdetectLang: data.source_lang,\n\t\t}\n\t};\n}\n\n/**\n * @description Thành công và trả về err\n */\nexport function detectLangFailed(err, detectLang) {\n\treturn {\n\t  type: DETECTLANG_FAIL,\n\t  payload: {\n\t\t\tdetectLang,\n\t\t\terr,\n\t\t}\n\t};\n}\n\n/**\n * @description Do BE bắt fai kiểm tra status \n * nên sẽ gọi lại API khi nào status được dịch.\n * Đặt thời gian mỗi lần gọi lại API \n * ! => tránh việc gọi liên tục và ko cần thiết\n */\nconst recursiveCheckStatus = async (translationHistoryId, taskId, time) => {\n\tconst getTranslationHistoryResult = await axiosHelper.getTranslateHistoryGetSingle({\n\t\ttranslationHistoryId,\n\t\ttaskId,\n\t});\n\tif(getTranslationHistoryResult.data.status === STATUS.TRANSLATING){\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst getTranslationHistoryResult = await recursiveCheckStatus(translationHistoryId, taskId, time);\n\t\t\t\t\tresolve(getTranslationHistoryResult);\n\t\t\t\t} catch (e) {\n\t\t\t\t\treject(e);\n\t\t\t\t}\n\t\t\t}, 1000);\n\t\t});\n\t} else {\n\t\treturn getTranslationHistoryResult;\n\t}\n};\n\n/**\n * @description Do BE bắt fai kiểm tra status \n * nên sẽ gọi lại API khi nào status được dịch.\n * Đặt thời gian mỗi lần gọi lại API \n * ! => tránh việc gọi liên tục và ko cần thiết\n */\nconst recursiveDetectionCheckStatus = async (translationHistoryId, taskId, time) => {\n\tconst getDetectionHistoryResult = await axiosHelper.getDetectionHistoryGetSingle({\n\t\ttranslationHistoryId,\n\t\ttaskId,\n\t});\n\tif(getDetectionHistoryResult.data.status === STATUS.DETECTING){\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(async () => {\n\t\t\t\ttry{\n\t\t\t\t\tconst getDetectionHistoryResult = await recursiveDetectionCheckStatus(translationHistoryId, taskId, time);\n\t\t\t\t\tresolve(getDetectionHistoryResult);\n\t\t\t\t} catch (e) {\n\t\t\t\t\treject(e);\n\t\t\t\t}\n\t\t\t}, 1000);\n\t\t});\n\t} else {\n\t\treturn getDetectionHistoryResult;\n\t}\n};\n\n/**\n * @description Nhập từ input => đợi 1 khoảng thời gian đẻ nhận text\n * ! Tránh việc gọi API ko cần thiêt và liên tục\n */\nconst debouncedTranslate = debounce(async (body, dispatch) => {\n\ttry {\n\t\tlet time = 1;\t\t\n\t\tconst postTranslationResult = await axiosHelper.postTranslate(body);\n\t\tconst getTranslationHistoryResult = await recursiveCheckStatus(\n\t\t\tpostTranslationResult.data.translationHitoryId, \n\t\t\tpostTranslationResult.data.taskId, \n\t\t\ttime\n\t\t);  \n\n\t\tif(getTranslationHistoryResult.message === 'Time Out'){\n\t\t\tdispatch(translationFailed(getTranslationHistoryResult.message));\n\t\t} else {\n\t\t\tconst getTranslationResult = await axiosHelper.getTranslateResult(getTranslationHistoryResult.data.resultUrl);\n\t\t\tif (getTranslationResult.status === 'closed'){\n\t\t\t\tdispatch(translationFailed(getTranslationHistoryResult.message));\n\t\t\t}else{\n\t\t\t\tdispatch(translationSuccess(getTranslationResult));\n\t\t\t}\n\t\t}\n\t} catch(error) {\n\t\tdispatch(translationFailed(error));\n\t}\n}, 0);\n\n/**\n * @description Thunk function cho việc dịch từ và lấy kết quả\n */\n// { \"sourceText\": \"string\", \"sourceLang\": \"zh\", \"targetLang\": \"zh\"\nexport const translationAsync = (body) => (dispatch) => {\n\tif(body.sourceText.trim() !== '' ){\n\t\tdispatch(translationLoading());\n\t\tdebouncedTranslate(body, dispatch);\n\t}\n};\n\n/**\n * @description Nhập từ input => đợi 1 khoảng thời gian đẻ nhận text\n * ! Tránh việc gọi API ko cần thiêt và liên tục\n */\nconst debouncedTranslateAndDetect = debounce(async (body, dispatch) => {\n\ttry {\n\t\tlet time = 1;\n\t\t// Phát hiện ngôn ngữ\n\t\tconst getDetectLangInstant = await axiosHelper.detectLangInstant({sourceText: body.sourceText});\n\t\tconst getSourceLang = await recursiveDetectionCheckStatus(\n\t\t\tgetDetectLangInstant.data.translationHitoryId, \n\t\t\tgetDetectLangInstant.data.taskId, \n\t\t\ttime\n\t\t); \n\t\tif(getSourceLang.message === 'Time Out'){\n\t\t\tdispatch(detectLangFailed(getSourceLang.message, 'unknown'));\n\t\t} else {\n\t\t\tconst getDetectResult = await axiosHelper.getTranslateResult(getSourceLang.data.resultUrl);\n\t\t\tif (getDetectResult.status === 'closed'){\n\t\t\t\tdispatch(detectLangFailed(getDetectResult.message, getDetectResult.source_lang));\n\t\t\t} else {\n\t\t\t\t// Sử dụng ngôn ngữ phát hiện được và dịch\n\t\t\t\tconst postTranslationResult = await axiosHelper.postTranslate({\n\t\t\t\t\t...body,\n\t\t\t\t\tsourceLang: getDetectResult.source_lang,\n\t\t\t\t});\n\t\t\t\tconst getTranslationHistoryResult = await recursiveCheckStatus(\n\t\t\t\t\tpostTranslationResult.data.translationHitoryId, \n\t\t\t\t\tpostTranslationResult.data.taskId, \n\t\t\t\t\ttime\n\t\t\t\t);\n\t\t\t\tif(getTranslationHistoryResult.message === 'Time Out'){\n\t\t\t\t\tdispatch(detectLangFailed(getTranslationHistoryResult.message, 'unknown'));\n\t\t\t\t} else {\n\t\t\t\t\tconst getTranslationResult = await axiosHelper.getTranslateResult(getTranslationHistoryResult.data.resultUrl);\n\t\t\t\t\tif (getTranslationResult.status === 'closed'){\n\t\t\t\t\t\tdispatch(detectLangFailed(getTranslationResult.message, getTranslationResult.source_lang));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdispatch(detectLangSuccess(getTranslationResult));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch(error) {\n\t\tdispatch(detectLangFailed(error, 'unknown'));\n\t}\n}, 0);\n\n/**\n * @description Thunk function cho việc dịch từ và lấy kết quả\n */\n// { \"sourceText\": \"string\", \"sourceLang\": null, \"targetLang\": \"zh\"\nexport const translationAndDetectAsync = (body) => (dispatch) => {\n\tif(body.sourceText.trim() !== '' ){\n\t\tdispatch(detectLangLoading());\n\t\tdebouncedTranslateAndDetect(body, dispatch);\n\t}\n};\n\nexport const makeTranslation = (translationResult, translationData) => {\n\tconst dataTo = translationResult;\n\tconst { direction } = translationData;\n\tconst dataFrom = translationData.data;\n\treturn {\n\t\ttype: TRANSLATION,\n\t\tpayload: {\n\t\t\tfromText: dataFrom,\n\t\t\ttoText: dataTo,\n\t\t\tdirection,\n\t\t}\n\t};\n};\n\nexport const makeTranslationAsync = (translationData) => async (dispatch) => {\n\ttry {\n\t\tconst translationResult = await axiosHelper.createTranslation(translationData);\n\t\tdispatch(makeTranslation(translationResult.data.data, translationData));\n\t} catch(error) {\n\t\tconsole.warn(error);\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}