{"ast":null,"code":"import _objectSpread from\"/workspace/hoangta/translation-backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/workspace/hoangta/translation-backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/workspace/hoangta/translation-backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useReducer}from'react';import{v4}from'uuid';import{ADD_NOTI,REMOVE_NOTI,INFO_NOTI}from'../constants/notificationConstant';import NotificationBox from'./NotificationBox';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NotificationContext=/*#__PURE__*/React.createContext();/**\n * Return a function which creates a new notification\n * The returned function takes 2 params\n * \n * param {string} message the message to be displaed\n * param {string} type SUCCESS, INFO or ERROR, find the constants in\n * constants/notificationConstants.js\n * @author AnLG\n * @return { function(string, string) : void } returned function\n*/export var useNotification=function useNotification(){var dispatch=useContext(NotificationContext);var createNoti=function createNoti(message){var type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:INFO_NOTI;dispatch({type:ADD_NOTI,payload:{id:v4(),type:type,message:message}});};return createNoti;};export default function NotificationProvider(props){// eslint-disable-next-line react/prop-types\nvar children=props.children;var _useReducer=useReducer(function(state,action){switch(action.type){case ADD_NOTI:return[].concat(_toConsumableArray(state),[_objectSpread({},action.payload)]);case REMOVE_NOTI:return state.filter(function(ele){return ele.id!==action.id;});default:break;}},[]),_useReducer2=_slicedToArray(_useReducer,2),notifications=_useReducer2[0],dispatch=_useReducer2[1];// {\n// \tid: v4(),\n// \ttype: SUCCESS_NOTI,\n// \tmessage: 'Hello An'\n// }, {\n// \tid: v4(),\n// \ttype: SUCCESS_NOTI,\n// \tmessage: 'Hello Dep Trai'\n// }\nreturn/*#__PURE__*/_jsx(NotificationContext.Provider,{value:dispatch,children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"notification-wrapper\",children:notifications.map(function(note){return/*#__PURE__*/_jsx(NotificationBox,{dispatchNoti:dispatch,id:note.id,message:note.message,type:note.type},note.id);})}),children]})});}","map":{"version":3,"sources":["/workspace/hoangta/translation-backend/frontend/src/components/NotificationProvider.js"],"names":["React","useContext","useReducer","v4","ADD_NOTI","REMOVE_NOTI","INFO_NOTI","NotificationBox","NotificationContext","createContext","useNotification","dispatch","createNoti","message","type","payload","id","NotificationProvider","props","children","state","action","filter","ele","notifications","map","note"],"mappings":"yfAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,UAA5B,KAA8C,OAA9C,CACA,OAASC,EAAT,KAAmB,MAAnB,CACA,OAASC,QAAT,CAAmBC,WAAnB,CAAgCC,SAAhC,KAAiD,mCAAjD,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,C,wFAEA,GAAMC,CAAAA,mBAAmB,cAAGR,KAAK,CAACS,aAAN,EAA5B,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EACA,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CACpC,GAAMC,CAAAA,QAAQ,CAAGV,UAAU,CAACO,mBAAD,CAA3B,CAEA,GAAMI,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,OAAD,CAA+B,IAArBC,CAAAA,IAAqB,2DAAdR,SAAc,CACjDK,QAAQ,CAAC,CACRG,IAAI,CAAEV,QADE,CAERW,OAAO,CAAE,CACRC,EAAE,CAAEb,EAAE,EADE,CAERW,IAAI,CAAJA,IAFQ,CAGRD,OAAO,CAAPA,OAHQ,CAFD,CAAD,CAAR,CAQA,CATD,CAWA,MAAOD,CAAAA,UAAP,CACA,CAfM,CAiBP,cAAe,SAASK,CAAAA,oBAAT,CAA8BC,KAA9B,CAAqC,CACnD;AACA,GAAQC,CAAAA,QAAR,CAAqBD,KAArB,CAAQC,QAAR,CAEA,gBAAkCjB,UAAU,CAAC,SAACkB,KAAD,CAAQC,MAAR,CAAmB,CAC/D,OAAQA,MAAM,CAACP,IAAf,EACA,IAAKV,CAAAA,QAAL,CACC,mCAAWgB,KAAX,oBAAsBC,MAAM,CAACN,OAA7B,IACD,IAAKV,CAAAA,WAAL,CACC,MAAOe,CAAAA,KAAK,CAACE,MAAN,CAAa,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACP,EAAJ,GAAWK,MAAM,CAACL,EAAtB,EAAhB,CAAP,CACD,QACC,MAND,CAQA,CAT2C,CASzC,EATyC,CAA5C,4CAAOQ,aAAP,iBAAsBb,QAAtB,iBAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,mBACC,KAAC,mBAAD,CAAqB,QAArB,EAA8B,KAAK,CAAEA,QAArC,uBACC,oCACC,YAAK,SAAS,CAAC,sBAAf,UACEa,aAAa,CACZC,GADD,CACK,SAAAC,IAAI,qBACR,KAAC,eAAD,EAEC,YAAY,CAAEf,QAFf,CAGC,EAAE,CAAGe,IAAI,CAACV,EAHX,CAIC,OAAO,CAAEU,IAAI,CAACb,OAJf,CAKC,IAAI,CAAEa,IAAI,CAACZ,IALZ,EACMY,IAAI,CAACV,EADX,CADQ,EADT,CADF,EADD,CAYEG,QAZF,GADD,EADD,CAmBA","sourcesContent":["import React, { useContext, useReducer } from 'react';\nimport { v4 } from 'uuid';\nimport { ADD_NOTI, REMOVE_NOTI, INFO_NOTI } from '../constants/notificationConstant';\nimport NotificationBox from './NotificationBox';\n\nconst NotificationContext = React.createContext();\n\n/**\n * Return a function which creates a new notification\n * The returned function takes 2 params\n * \n * param {string} message the message to be displaed\n * param {string} type SUCCESS, INFO or ERROR, find the constants in\n * constants/notificationConstants.js\n * @author AnLG\n * @return { function(string, string) : void } returned function\n*/\nexport const useNotification = () => {\n\tconst dispatch = useContext(NotificationContext);\n\n\tconst createNoti = (message, type = INFO_NOTI) => {\n\t\tdispatch({\n\t\t\ttype: ADD_NOTI,\n\t\t\tpayload: {\n\t\t\t\tid: v4(),\n\t\t\t\ttype,\n\t\t\t\tmessage\n\t\t\t}\n\t\t});\n\t};\n\t\n\treturn createNoti;\n};\n\nexport default function NotificationProvider(props) {\n\t// eslint-disable-next-line react/prop-types\n\tconst { children } = props;\n\n\tconst [notifications, dispatch] = useReducer((state, action) => {\n\t\tswitch (action.type) {\n\t\tcase ADD_NOTI:\n\t\t\treturn [...state, {...action.payload}];\n\t\tcase REMOVE_NOTI:\n\t\t\treturn state.filter(ele => ele.id !== action.id);\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t}, []\n\t);\n\t\n\t// {\n\t// \tid: v4(),\n\t// \ttype: SUCCESS_NOTI,\n\t// \tmessage: 'Hello An'\n\t// }, {\n\t// \tid: v4(),\n\t// \ttype: SUCCESS_NOTI,\n\t// \tmessage: 'Hello Dep Trai'\n\t// }\n\n\n\treturn (\n\t\t<NotificationContext.Provider value={dispatch}>\n\t\t\t<div>\n\t\t\t\t<div className=\"notification-wrapper\">\n\t\t\t\t\t{notifications\n\t\t\t\t\t\t.map(note => \n\t\t\t\t\t\t\t<NotificationBox\n\t\t\t\t\t\t\t\tkey={note.id}\n\t\t\t\t\t\t\t\tdispatchNoti={dispatch}\n\t\t\t\t\t\t\t\tid ={note.id} \n\t\t\t\t\t\t\t\tmessage={note.message}\n\t\t\t\t\t\t\t\ttype={note.type} />)\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t</NotificationContext.Provider>\n\t);\n\n}"]},"metadata":{},"sourceType":"module"}