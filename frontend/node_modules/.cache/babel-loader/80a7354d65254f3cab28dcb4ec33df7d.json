{"ast":null,"code":"import _regeneratorRuntime from\"/workspace/hoangta/translation-backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/workspace/hoangta/translation-backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React from'react';import{useGoogleLogin}from'react-google-login';import{useHistory}from'react-router-dom';import*as axiosHelper from'../../helpers/axiosHelper';import{changeIsLogin}from'../../redux/actions/navbarAction';import{ACCESS_TOKEN,REFRESH_TOKEN,USER_IMG_URL}from'../../constants/envVar';import{useDispatch}from'react-redux';import{getCurrentUser}from'../../redux/actions/userAction';import{toast}from'react-toastify';import{toastError}from'../../components/Toast';// refresh token\n// import { refreshTokenSetup } from './refreshToken';\n// const clientId =\n// \t'1006597644137-plgvccnt0d3keaojro5q3j69vkjudfvs.apps.googleusercontent.com';\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function LoginHooks(){var dispatch=useDispatch();var history=useHistory();var onSuccess=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(res){var siginInResult;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axiosHelper.SignInWithGoogle({access_token:res.accessToken,platform:'web'});case 2:siginInResult=_context.sent;dispatch(getCurrentUser());toast.success(\"\\u0110\\u0103ng nh\\u1EADp th\\xE0nh c\\xF4ng ch\\xE0o m\\u1EEBng \".concat(res.profileObj.name,\".\"));// refreshTokenSetup(res);\n// sessionStorage.setItem(IS_AUTH, res);\ndispatch(changeIsLogin(true));localStorage.setItem(ACCESS_TOKEN,siginInResult.data.accessToken);localStorage.setItem(REFRESH_TOKEN,siginInResult.data.refreshToken);localStorage.setItem(USER_IMG_URL,res.profileObj.imageUrl);if(res.profileObj){history.push('/translate');}case 10:case\"end\":return _context.stop();}}},_callee);}));return function onSuccess(_x){return _ref.apply(this,arguments);};}();// const onSuccess = async (res) => {\n// \ttry {\n// \t\tsetIsLoading(true);\n// \t\tconst siginInResult = await axiosHelper.SignIn({\n// \t\t\taccess_token: res.accessToken,\n// \t\t\tplatform: 'web'\n// \t\t});\n// \t\tdispatch(changeIsLogin(true));\n// \t\tlocalStorage.setItem(ACCESS_TOKEN, siginInResult.data.accessToken);\n// \t\tlocalStorage.setItem(REFRESH_TOKEN, siginInResult.data.refreshToken);\n// \t\tlocalStorage.setItem(USER_IMG_URL, res.profileObj.imageUrl);\n// \t\tsetIsLoading(false);\n// \t}catch (e) {\n// \t\tsetIsLoading(false);\n// \t\talert(e);\n// \t}\n// \t// refreshTokenSetup(res);\n// };\n// eslint-disable-next-line no-unused-vars\nvar onFailure=function onFailure(res){toastError('Đăng nhập thất bại');};var _useGoogleLogin=useGoogleLogin({onSuccess:onSuccess,onFailure:onFailure,// eslint-disable-next-line no-undef\nclientId:process.env.REACT_APP_CLIENT_ID,isSignedIn:false,accessType:'offline'// responseType: 'code',\n// prompt: 'consent',\n}),signIn=_useGoogleLogin.signIn;return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"button\",{onClick:function onClick(){return signIn();},style:{backgroundColor:'#EA4335',borderRadius:10},className:\"btn btn-danger btn-block\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fab fa-google fa-fw\"}),/*#__PURE__*/_jsx(\"div\",{style:{color:'white',alignSelf:'center',fontWeight:'600',fontSize:'20px'},children:\"\\u0110\\u0103ng nh\\u1EADp b\\u1EB1ng Google\"})]})});}export default LoginHooks;","map":{"version":3,"sources":["/workspace/hoangta/translation-backend/frontend/src/screens/Login/LoginGoogle.js"],"names":["React","useGoogleLogin","useHistory","axiosHelper","changeIsLogin","ACCESS_TOKEN","REFRESH_TOKEN","USER_IMG_URL","useDispatch","getCurrentUser","toast","toastError","LoginHooks","dispatch","history","onSuccess","res","SignInWithGoogle","access_token","accessToken","platform","siginInResult","success","profileObj","name","localStorage","setItem","data","refreshToken","imageUrl","push","onFailure","clientId","process","env","REACT_APP_CLIENT_ID","isSignedIn","accessType","signIn","backgroundColor","borderRadius","color","alignSelf","fontWeight","fontSize"],"mappings":"yUAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,cAAT,KAA+B,oBAA/B,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAO,GAAKC,CAAAA,WAAZ,KAA6B,2BAA7B,CACA,OAASC,aAAT,KAA8B,kCAA9B,CACA,OAASC,YAAT,CAAuBC,aAAvB,CAAsCC,YAAtC,KAAyD,wBAAzD,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,cAAT,KAA+B,gCAA/B,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA,OAASC,UAAT,KAA2B,wBAA3B,CAEA;AACA;AAEA;AACA;6IAEA,QAASC,CAAAA,UAAT,EAAsB,CACrB,GAAMC,CAAAA,QAAQ,CAAGL,WAAW,EAA5B,CACA,GAAMM,CAAAA,OAAO,CAAGZ,UAAU,EAA1B,CACA,GAAMa,CAAAA,SAAS,0FAAG,iBAAOC,GAAP,0JACWb,CAAAA,WAAW,CAACc,gBAAZ,CAA6B,CACxDC,YAAY,CAAEF,GAAG,CAACG,WADsC,CAExDC,QAAQ,CAAE,KAF8C,CAA7B,CADX,QACXC,aADW,eAKjBR,QAAQ,CAACJ,cAAc,EAAf,CAAR,CACAC,KAAK,CAACY,OAAN,uEACmCN,GAAG,CAACO,UAAJ,CAAeC,IADlD,OAGA;AACA;AACAX,QAAQ,CAACT,aAAa,CAAC,IAAD,CAAd,CAAR,CAEAqB,YAAY,CAACC,OAAb,CAAqBrB,YAArB,CAAmCgB,aAAa,CAACM,IAAd,CAAmBR,WAAtD,EACAM,YAAY,CAACC,OAAb,CAAqBpB,aAArB,CAAoCe,aAAa,CAACM,IAAd,CAAmBC,YAAvD,EACAH,YAAY,CAACC,OAAb,CAAqBnB,YAArB,CAAmCS,GAAG,CAACO,UAAJ,CAAeM,QAAlD,EACA,GAAIb,GAAG,CAACO,UAAR,CAAoB,CACnBT,OAAO,CAACgB,IAAR,CAAa,YAAb,EACA,CAlBgB,uDAAH,kBAATf,CAAAA,SAAS,4CAAf,CAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,GAAMgB,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACf,GAAD,CAAS,CAC1BL,UAAU,CACT,oBADS,CAAV,CAGA,CAJD,CAMA,oBAAmBV,cAAc,CAAC,CACjCc,SAAS,CAATA,SADiC,CAEjCgB,SAAS,CAATA,SAFiC,CAGjC;AACAC,QAAQ,CAAEC,OAAO,CAACC,GAAR,CAAYC,mBAJW,CAKjCC,UAAU,CAAE,KALqB,CAMjCC,UAAU,CAAE,SACZ;AACA;AARiC,CAAD,CAAjC,CAAQC,MAAR,iBAAQA,MAAR,CAWA,mBACC,sCACC,gBAAQ,OAAO,CAAE,yBAAMA,CAAAA,MAAM,EAAZ,EAAjB,CAAiC,KAAK,CAAE,CAAEC,eAAe,CAAE,SAAnB,CAA8BC,YAAY,CAAE,EAA5C,CAAxC,CAA0F,SAAS,CAAC,0BAApG,wBACC,UAAG,SAAS,CAAC,qBAAb,EADD,cAEC,YAAK,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAT,CAAkBC,SAAS,CAAE,QAA7B,CAAuCC,UAAU,CAAE,KAAnD,CAA0DC,QAAQ,CAAE,MAApE,CAAZ,uDAFD,GADD,EADD,CAUA,CAED,cAAehC,CAAAA,UAAf","sourcesContent":["import React from 'react';\nimport { useGoogleLogin } from 'react-google-login';\nimport { useHistory } from 'react-router-dom';\nimport * as axiosHelper from '../../helpers/axiosHelper';\nimport { changeIsLogin } from '../../redux/actions/navbarAction';\nimport { ACCESS_TOKEN, REFRESH_TOKEN, USER_IMG_URL} from '../../constants/envVar';\nimport { useDispatch } from 'react-redux';\nimport { getCurrentUser } from '../../redux/actions/userAction';\nimport { toast } from 'react-toastify';\nimport { toastError } from '../../components/Toast';\n\n// refresh token\n// import { refreshTokenSetup } from './refreshToken';\n\n// const clientId =\n// \t'1006597644137-plgvccnt0d3keaojro5q3j69vkjudfvs.apps.googleusercontent.com';\n\nfunction LoginHooks() {\n\tconst dispatch = useDispatch();\n\tconst history = useHistory();\n\tconst onSuccess = async (res) => {\n\t\tconst siginInResult = await axiosHelper.SignInWithGoogle({\n\t\t\taccess_token: res.accessToken,\n\t\t\tplatform: 'web'\n\t\t});\n\t\tdispatch(getCurrentUser());\n\t\ttoast.success(\n\t\t\t`Đăng nhập thành công chào mừng ${res.profileObj.name}.`\n\t\t);\n\t\t// refreshTokenSetup(res);\n\t\t// sessionStorage.setItem(IS_AUTH, res);\n\t\tdispatch(changeIsLogin(true));\n\t\t\n\t\tlocalStorage.setItem(ACCESS_TOKEN, siginInResult.data.accessToken);\n\t\tlocalStorage.setItem(REFRESH_TOKEN, siginInResult.data.refreshToken);\n\t\tlocalStorage.setItem(USER_IMG_URL, res.profileObj.imageUrl);\n\t\tif (res.profileObj) {\n\t\t\thistory.push('/translate');\n\t\t}\n\t};\n\n\t// const onSuccess = async (res) => {\n\t// \ttry {\n\t// \t\tsetIsLoading(true);\n\t// \t\tconst siginInResult = await axiosHelper.SignIn({\n\t// \t\t\taccess_token: res.accessToken,\n\t// \t\t\tplatform: 'web'\n\t// \t\t});\n\t// \t\tdispatch(changeIsLogin(true));\n\t// \t\tlocalStorage.setItem(ACCESS_TOKEN, siginInResult.data.accessToken);\n\t// \t\tlocalStorage.setItem(REFRESH_TOKEN, siginInResult.data.refreshToken);\n\t// \t\tlocalStorage.setItem(USER_IMG_URL, res.profileObj.imageUrl);\n\t// \t\tsetIsLoading(false);\n\t// \t}catch (e) {\n\t// \t\tsetIsLoading(false);\n\t// \t\talert(e);\n\t// \t}\n\t// \t// refreshTokenSetup(res);\n\t// };\n\n\t// eslint-disable-next-line no-unused-vars\n\tconst onFailure = (res) => {\n\t\ttoastError(\n\t\t\t'Đăng nhập thất bại'\n\t\t);\n\t};\n\n\tconst { signIn } = useGoogleLogin({\n\t\tonSuccess,\n\t\tonFailure,\n\t\t// eslint-disable-next-line no-undef\n\t\tclientId: process.env.REACT_APP_CLIENT_ID,\n\t\tisSignedIn: false,\n\t\taccessType: 'offline',\n\t\t// responseType: 'code',\n\t\t// prompt: 'consent',\n\t});\n\n\treturn (\n\t\t<>\n\t\t\t<button onClick={() => signIn()} style={{ backgroundColor: '#EA4335', borderRadius: 10 }} className=\"btn btn-danger btn-block\">\n\t\t\t\t<i className=\"fab fa-google fa-fw\" />\n\t\t\t\t<div style={{ color: 'white', alignSelf: 'center', fontWeight: '600', fontSize: '20px' }}>Đăng nhập bằng Google</div>\n\t\t\t</button>\n\n\t\t</>\n\n\t);\n}\n\nexport default LoginHooks;"]},"metadata":{},"sourceType":"module"}